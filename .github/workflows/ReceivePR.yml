name: Receive PR

# read-only repo token
# no access to secrets
on:
  pull_request:

jobs:
  break:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: [
          "JuliaSmoothOptimizers/NLPModelsModifiers.jl",
          "JuliaSmoothOptimizers/NLPModelsIpopt.jl"
        ]
        pkgversion: [master, stable]

    steps:
      - uses: actions/checkout@v2

      # Install Julia
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1
          arch: x64
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1

      # Breakage test
      - name: 'Breakage of ${{ matrix.pkg }}, ${{ matrix.pkgversion }} version'
        env:
          URL: ${{ matrix.pkg }}
          VERSION: ${{ matrix.pkgversion }}
        run: |
          set -v
          mkdir -p ./pr
          echo "${{ github.event.number }}" > ./pr/NR
          git clone https://github.com/$URL
          export PKG=$(echo $URL | cut -f2 -d/)
          cd $PKG
          if [ $VERSION == "stable" ]; then
            TAG=$(git tag -l "v*" --sort=-creatordate | head -n1)
            git checkout $TAG
          fi
          julia -e 'using Pkg;
            PKG, VERSION = ENV["PKG"], ENV["VERSION"]
            passing = false
            try
              pkg"activate .";
              pkg"instantiate";
              pkg"dev ../";
              pkg"build";
              pkg"test";
              passing = true
            catch e
              @error e;
            end;
            open("../pr/$PKG-$VERSION", "w") do io
              str = passing ? "Pass-green" : "Fail-red";
              print(io, "![](https://img.shields.io/badge/$PKG-$str)");
            end' > ../pr/$PKG-$VERSION

      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/

  upload:
    needs: break
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: pr
          path: pr/

      - run: ls
      - run: |
          cd pr
          echo "| Package name | master | stable |" > MSG
          echo "|--|--|--|" >> MSG
          count=0
          for file in *
          do
            [ "$file" == "NR" ] && continue
            [ "$file" == "MSG" ] && continue
            if [ $count == "0" ]; then
              name=$(echo $file | cut -f1 -d-)
              echo -n "| $name | "
            else
              echo -n "| "
            fi
            cat $file
            if [ $count == "0" ]; then
              echo -n " "
              count=1
            else
              echo " |"
              count=0
            fi
          done >> MSG

      - uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/